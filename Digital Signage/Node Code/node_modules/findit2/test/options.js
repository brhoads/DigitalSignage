var assert = require('assert');
var path = require('path');
var findit = require('../');

exports.relative = function () {
    var base = __dirname + '/foo';
    var finder = findit.find(base, { relative: true }, function (file, stat) {
        assert.notEqual(file.slice(0, base.length), base);
    });
};

exports.relativeSync = function () {
    var base = __dirname + '/foo';
    var files = findit.findSync(base, { relative: true });

    assert.ok(files.every(function (file) {
        return file.slice(0, base.length) !== base;
    }));
};

exports.ignore = function () {
    var base = __dirname + '/foo';
    var files = [];
    var finder = findit.find(base, { ignore: "a/b" }, function (file, stat) {
        files.push(file);
    });
    finder.on("end", function () {
        assert.equal(files.length, 3);
    });
};

exports.ignoreSync = function () {
    var base = __dirname + '/foo';
    var files = findit.findSync(base, { ignore: "a/b" });
    assert.equal(files.length, 3);
};

exports.ignoreRegex = function () {
    var base = __dirname + '/foo';
    var files = [];
    var finder = findit.find(base, { ignore: /^a/ }, function (file, stat) {
        files.push(file);
    });
    finder.on("end", function () {
        assert.equal(files.length, 1);
    });
};

exports.ignoreRegexSync = function () {
    var base = __dirname + '/foo';
    var files = findit.findSync(base, { ignore: /^a/ });
    assert.equal(files.length, 1);
};

exports.ignoreArray = function () {
    var base = __dirname + '/foo';
    var files = [];
    var finder = findit.find(base, { ignore: ["a/b", "x"] }, function (file, stat) {
        files.push(file);
    });
    finder.on("end", function () {
        assert.equal(files.length, 2);
    });
};

exports.ignoreArraySync = function () {
    var base = __dirname + '/foo';
    var files = findit.findSync(base, { ignore: ["a/b", "x"] });
    assert.equal(files.length, 2);
};
